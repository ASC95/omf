Actual behavior: Program prints correct values if a fault is not added, 
but if a fault is added, it prints only zeros in dump files.
Steps to reproduce: Run hello.py.
Expected behavior: Non-zero values like when the fault is not added.
Workaround/fix: Setting fault to show up after 10 second simulation warm-up.
Discussion:
	Why does this fix the problem? I assume it has something to do with when the dump files actually measure the values on the different nodes? 

Actual behavior: crash with grandparent warning when running trip37 with meter parented to load parented to node.
Steps to reproduce: Run hello.py.
Expected behavior: no crash.
Workaround/fix: don't parent meters to nodes parented to other things. GridLAB-D doesn't support this, per error message.
Dicussion:
	What does it mean if a load is attached to a node by parenting it to a node?  This is the cause of the grandchildren error when we  try to add meters using python code. [Parenting is a way to reduce the number of components in a model. It's a convenience feature for modelers.]

Actual behavior: Metrics_Output states that all meters are affected by the manually generated fault from 0:0:10-0:0:20 TLG on node713-704.
Similarly, generating random faults affects the entire system.
Steps to reproduce: run hello.py with manual fault generator set to the desired fault or with random fault generator and the system set to run for a while (maybe 3 months?)
Expected behavior: other faults don't necessarily affect every meter.
Workaround/fix: add a recloser or a fuse manually to the glm file.
Discussion:
	Why is the entire system tripped when any fault is generated and not just things downstream from the fault? Note: the system is assumed to have substation level breakers or feeder protection.

Actual behavior: Metrics_output is not generating any data and Fault_check_out is empty when the system is run from 01/01/2001 0:0:00 to 01/01/2001 0:0:20.
Expected behavior: some data is generated.
Workaround/fix: Allow the system to run for longer, so there is more of a chance that any random faults can occur. For instance, running it for 3 months is a fairly useful way of generating data.
Discussion:
	Random fault generation on Gridlab-D occurs separate from the amount of time the system runs. If they do not overlap, there may be very few or no faults generated.

Actual behavior: SAIDI/SAIFI values are 0 with every run of the program. Although faults are generated, the values do not increase.
Expected behavior: SAIDI/SAIFI values are not 0, but some number between 0.8 and 1.6 or so...
Workaround/fix: Allow system to run for an entire year, not generating stats until the whole period of the year is up.
Discussion:
	SAIDI/SAIFI values are still a bit lower than expected for a given system that is run. This can be adjusted by playing with the rate at which faults occur.

Actual behavior: When trying to run any .py file in the omf, get an error:
"ImportError: No module named fcntl". Doing some research, it seems to be related to __init__.py and a Windows specific problem. It appears that fcntl does not work with windows.
Expected behavior: Python files in the omf can be run and generate expected results.
Workaround/fix: David implemented a hack allowing us to 
Discussion:
	This appears to be a Windows specific error. Is there a way to make this import optional? I think it was a recent update to the omf that broke it for me.

Actual behavior: plt.bar() and plt.show() produce no output when run in smartSwitching. This is not the case when I create a python file to test plt operations. In this case, everything works as expected, even given the same set of data.
Expected behavior: plt.bar() and plt.show() produce a bar graph when given the output from the recloserAnalysis() function.
Workaround/fix: Save the figure rather to the smartSwitching folder instead.
Dicussion:
	Why does it still not appear automatically?

Actual behavior: plot.py does not generate any output, althought the program finishes running.
Expected behavior: plot.py produces a graph.
Workaround/fix: Use matplotlib instead.
Discussion:
	Why does it not work? Tried looking online but no answers yet. Maybe something with jupyter notebook? I tried running both online and offline versions.