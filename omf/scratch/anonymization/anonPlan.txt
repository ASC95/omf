MILESTONE
XXX What is the initial test data set?
	XXX Put simpleMarket system into this scratch folder.
	XXX Transmission test system case9. 
	XXX What's the test function? Stub created.
XXX Implement def distPsuedomizeNames()
	XXX Add code to implement. We know basically what it should do.
	XXX Debug the pseudomizeNames.
XXX Implement def distRandomizeNames()
	XXX Create tests.
	XXX Implement.
	XXX Make sure it passes the tests.
	XXX Is there a refactoring that will reduce duplication of similar code?
XXX Implement def distRandomizeLocation()
	XXX Create tests like ones for names.
	XXX Add latitude and longitude attributes to all simple market test objects in the tree.
	XXX Replace the links, hiddenLinks, nodes, hiddenNodes each with empty lists.
	XXX Walk the tree, replace each lat and lon with a random one uniformly distributed between 0 and 1000.
XXX Implement def distTranslateLocation(translation,rotation)
	XXX Create tests like the ones for names.
	XXX Replace the links, hiddenLinks, nodes, hiddenNodes each with empty lists.
	XXX Walk the tree, replace each lat and lon with a translated and rotated version.
XXX Implement def distAddNoise(noisePerc)
	XXX Create tests like the ones for names.
	XXX Walk the tree, try to convert each value to a float and a complex number, if it succeeds add noise, if it fails ignore it.
	XXX What do we mean by noise? Add a uniform distributed random value between [value - noisePerc*value, value + noisePerc*value].
XXX How do we do all of the above for transmission? have pairs of functions, e.g. tranPseudomizeNames and distPseudomizeNames. Next step?
XXX Implement def tranPsuedomizeNames()
XXX Implement def tranRandomizeNames()
XXX Implement def tranRandomizeLocation()
XXX Implement def tranTranslateLocation(translation,rotation)
XXX Implement def tranAddNoise(noisePerc)
XXX Remove feature for distCombineLoads() and tranCombineLoads(). We don't have any models with multiple loads connected to the same meter. So we don't believe there will be any users for this feature. Need to update spec with this note.
XXX Remove feature def tranSmoothLoads(). There is not timeseries data in these models. Need to update spec with this note.
XXX Debug transmission dictionary access.
	OOO Refactor - less for...in loops
XXX Implement def distShuffleLoads(shufPerc). See spec image.
XXX Implement def tranShuffleLoadsAndGens(shufPerc). See spec image.
XXX Implement def tranModifyConductorLengths(). Deprecated because models don't include cable length or radius parameters. Spec updated to drop support for this.
OOO Implement def distModifyConductorLengths()
	XXX triplex_line
	XXX debug disappearing trip_line_config.
	OOO Use new test circuit /scratch/publicFeeders/Olin Barre GH.omd
	OOO no overhead_lines in Simple Market System
	OOO no underground_lines in Simple Market System
XXX Implement def distSmoothLoads()
	#PseudoCode
	scadaFile = omd['attachments']['subScadaCalibrated1.player']
	scadaLines = scadaFile.split('\n')
	scadaPairs = [x.split(',') for x in scadaLines] # [[ts,val],[ts,val],[ts,val],...]
	outList = []
	for pair in scadaPairs:
		aggAmount = 0
		aggHour = pair[0].getHourFromTimestamp()
		for pair in scadaPairs:
			if pair[0].getHourFromTimestamp() == aggHour:
				aggAmount += pair[1]
		outList.append([aggHour, aggAmount])

LATERBASE
OOO How do we open these .omd files in gridEdit? We need a visualizeFeeder function.
OOO Is our test dataset good enough? How do we enhance it.