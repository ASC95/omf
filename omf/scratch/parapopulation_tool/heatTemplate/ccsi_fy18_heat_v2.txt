heat_template_version: 2015-04-30

description: My first attempt to deploy three compute instances to run a co-simulation

parameters:
  private_net_name:
    type: string
    description: Name of private network to attach to.
  image_name:
    type: string
    description: The image to be used for devices
  key_name:
    type: string
    description: Key-pair to be used for devices
  FNCS_broker_port:
    type: string
    description: The port FNCS should run on
  experiment_server:
    type: string
    description: The server at which the experiment is hosted
  experiment_name:
    type: string
    description: Name of the experiment to execute


resources:
  FNCS-machine:
    type: OS::Nova::Server
    properties:
      key_name: {get_param: key_name}
      image: {get_param: image_name}
      flavor: m1.small
      networks:
      - network: {get_param: private_net_name}
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            $fncs-port:
              {get_param: FNCS_broker_port}
            $experiment_server:
              {get_param: experiment_server}
            $experiment_name:
              {get_param: experiment_name}
          template: |
            #!/bin/bash
              echo "export FNCS_BROKER=tcp://*:$fncs-port" >> /home/ubuntu/CCSI.env
              source /home/ubuntu/CCSI.env
              sudo mount $experiment_server:/home/ubuntu/CCSIcode/experiments /home/ubuntu/experiments
              cd /home/ubuntu/experiments/$experiment_name		
              fncs_broker 2 &> simLog.out &        
            # ...          

  GridLAB-machine:
    type: OS::Nova::Server
    properties:
      key_name: {get_param: key_name}
      image: {get_param: image_name}
      flavor: m1.small
      networks:
      - network: {get_param: private_net_name}
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            $fncs-ip:
              get_attr: [FNCS-machine, first_address]
            $fncs-port:
              {get_param: FNCS_broker_port}
            $experiment_server:
              {get_param: experiment_server}
            $experiment_name:
              {get_param: experiment_name}
          template: |
            #!/bin/bash
              echo "export FNCS_BROKER=tcp://$fncs-ip:$fncs-port" >> /home/ubuntu/CCSI.env
              source /home/ubuntu/CCSI.env              
              sudo mount $experiment_server:/home/ubuntu/CCSIcode/experiments /home/ubuntu/experiments
              cd /home/ubuntu/experiments/$experiment_name/R1_12_47_1_feeder_0
              gridlabd R1_12_47_1_feeder_0.glm &> simLog.out & 
            # ...  
       
  MATPOWER-machine:
    type: OS::Nova::Server
    properties:
      key_name: {get_param: key_name}
      image: {get_param: image_name}
      flavor: m1.small
      networks:
      - network: {get_param: private_net_name}
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            $fncs-ip:
              get_attr: [FNCS-machine, first_address]
            $fncs-port:
              {get_param: FNCS_broker_port}
            $experiment_server:
              {get_param: experiment_server}
            $experiment_name:
              {get_param: experiment_name}
          template: |
            #!/bin/bash
              echo "export FNCS_BROKER=tcp://$fncs-ip:$fncs-port" >> /home/ubuntu/CCSI.env
              source /home/ubuntu/CCSI.env              
              sudo mount $experiment_server:/home/ubuntu/CCSIcode/experiments /home/ubuntu/experiments
              cd /home/ubuntu/experiments/$experiment_name/matpower
              start_MATPOWER case118.m real_power_demand.txt reactive_power_demand.txt 86400 300 "2013-08-01 0:00:00" load_data.txt dispatchable_load_data.txt generator_data.txt &> simLog.out &
            # ...